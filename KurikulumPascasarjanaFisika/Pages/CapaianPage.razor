@page "/capaian"
@inject IKatalogService KatalogService
@inject ICapaianService CapaianService
@inject IAddressService AddressService
@inject ISessionStorageService Storage

<div class="col-lg-12 px-0 py-8 control-section">
    @if (CapaianSource is null)
    {
        <LoadingPageComponent />
    }
    else
    {
        <div class="content-wrapper mx-8">
            <div class="row my-4">
                <MudCard Outlined="true" Class="border-2" Elevation="2">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5" Class="avenir fs-3 fw-bold">CPL Program Studi dan Mata Kuliah</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                </MudCard>
            </div>
            <div class="row my-4">
                <div class="col-lg-6">
                    <MudSelect T="string" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Margin="Margin.Dense"
                               Class="custom-form-input" Dense="true" Label="Program Studi" Value="ProgramStudi"
                               ValueChanged="async value => await ChangeProgramStudi(value)">
                        @{
                            foreach (var prodi in AllProdi!)
                            {
                                <MudSelectItem Value=@prodi />
                            }
                        }
                    </MudSelect>
                </div>
                <div class="col-lg-6">
                    <MudSelect T="string" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Margin="Margin.Dense"
                               Class="custom-form-input" Dense="true" Label="Jenis Mata Kuliah" Value="JenisMK"
                               ValueChanged="value => ChangeJenisMK(value)">
                        <MudSelectItem Value="@("Semua")" />
                        <MudSelectItem Value="@("MKWI")" />
                        <MudSelectItem Value="@("MKWP")" />
                        <MudSelectItem Value="@("MKPB")" />
                        <MudSelectItem Value="@("MKOP")" />
                    </MudSelect>
                </div>
            </div>
            <div class="row my-4">
                <MudTable T="CapaianLulusan" Items="CPL" Dense="true" Hover="true" Bordered="true" Outlined="true" Elevation="2"
                          HeaderClass="header" Class="border-2" Breakpoint="Breakpoint.None">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6" Class="custom-table-title">@($"Capaian Lulusan Program Studi {ProgramStudi}")</MudText>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh Class="custom-table-header">KodeCPL</MudTh>
                        <MudTh Class="custom-table-header">UnsurCPL</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd Class="custom-table-td" DataLabel="KodeCPL">@context.KodeCPL</MudTd>
                        <MudTd Class="custom-table-td" DataLabel="UnsurCPL">@context.UnsurCPL</MudTd>
                    </RowTemplate>
                </MudTable>
            </div>
            @if(CapaianFiltered is not null && CapaianFiltered.Any())
            {
                <div class="row my-4">
                    <MudTable Items="CapaianFiltered" Dense="true" Hover="true" Bordered="true" Outlined="true" Striped="true" Elevation="2"
                              HeaderClass="header" Class="border-2" Breakpoint="Breakpoint.None">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6" Class="custom-table-title">Identitas Mata Kuliah</MudText>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh Class="custom-table-header">Kode</MudTh>
                            <MudTh Class="custom-table-header">Nama MK</MudTh>
                            @{
                                foreach (var x in CPLHeaders)
                                {
                                    <MudTh Class="custom-table-header text-center">@x</MudTh>
                                }
                            }
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd Class="custom-table-td" DataLabel="Kode">@context.Key.Kode</MudTd>
                            <MudTd Class="custom-table-td" DataLabel="Kode">@context.Key.NamaId</MudTd>
                            @{
                                foreach (var x in context.Value)
                                {
                                    <MudTd Class="custom-table-td text-center">
                                        @{
                                            if (x)
                                            {
                                                <MudIcon Icon="@Icons.Material.Filled.Close" Size="MudBlazor.Size.Small" />
                                            }
                                        }

                                    </MudTd>
                                }
                            }
                        </RowTemplate>
                    </MudTable>
                </div>
            }
            
        </div>
    }
</div>

<style>
    .custom-table-title {
        font-size: 20px;
        font-weight: bold !important;
    }

    .header {
        background-color: #212B3E;
    }

    .custom-table-header {
        font-size: 12px;
        font-weight: bold !important;
        color: white !important;
    }

    .custom-table-td {
        font-size: 12px;
        font-family: Avenir-Demi;
    }

    .mud-input-control > .mud-input-control-input-container > .mud-input-label-inputcontrol {
        font-size: 12px;
    }

    #custom-filter .mud-input {
        font-size: 10px;
    }

    .custom-form-input {
        font-size: 12px;
    }

        .custom-form-input p {
            font-size: 12px;
        }

    .mud-input-control > .mud-input-control-input-container > .mud-input-label-outlined.mud-input-label-inputcontrol {
        line-height: 1;
    }

    .selected {
        background-color: #354052 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }

</style>

@code{
    public Dictionary<MataKuliah, IEnumerable<bool>>? CapaianSource { get; set; } = new();
    public Dictionary<MataKuliah, IEnumerable<bool>>? CapaianFiltered { get; set; } = new();

    public string ProgramStudi { get; set; } = string.Empty;
    public string JenisMK { get; set; } = "Semua";
    public IEnumerable<string> CPLHeaders { get; set; } = [];
    public IEnumerable<CapaianLulusan>? CPL { get; set; } = [];
    private IEnumerable<string>? AllProdi { get; set; }

    protected async override Task OnInitializedAsync()
    {
        AllProdi = AddressService.GetAllProgramStudi();

        var getProdi = await Storage.GetItemAsync<string>("Program Studi Capaian");

        ProgramStudi = getProdi is not null ? getProdi : "Magister Fisika";
        
        CapaianSource = await CapaianService.GetCapaianMapping(ProgramStudi);
        CPL = await CapaianService.GetCPL(ProgramStudi);

        if (CapaianSource is null || CPL is null)
            return;

        CPLHeaders = CapaianSource.FirstOrDefault().Value.Select((x, index) => $"CPL {index + 1}");
        CapaianFiltered = CapaianSource.Select(x => x).ToDictionary();

    }

    public async Task ChangeProgramStudi(string value)
    {
        ProgramStudi = value;
        await Storage.SetItemAsStringAsync("Program Studi Capaian", ProgramStudi);

        JenisMK = "Semua";
        CapaianSource = await CapaianService.GetCapaianMapping(ProgramStudi);
        CPL = await CapaianService.GetCPL(ProgramStudi);

        if (CapaianSource is null || CPL is null)
            return;

        CPLHeaders = CapaianSource.FirstOrDefault().Value.Select((x, index) => $"CPL {index + 1}");
        CapaianFiltered = CapaianSource.Select(x => x).ToDictionary();
    }

    public void ChangeJenisMK(string value)
    {
        JenisMK = value;

        if(value == "Semua")
        {
            CapaianFiltered = CapaianSource is not null ? CapaianSource.Select(x => x).ToDictionary() : null;
        }
        else
        {
            CapaianFiltered = CapaianSource is not null ? CapaianSource.Where(x => x.Key.Jenis == value).ToDictionary() : null;
        }

    }
}